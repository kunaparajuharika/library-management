


package finalproject;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

/**
 *
 * @author harikakunaparaju
 */
public class FinalProject extends Application {
    
    @Override
    public void start(Stage stage) throws Exception {
        Parent root = FXMLLoader.load(getClass().getResource("FXMLDocument.fxml"));
        
        Scene scene = new Scene(root);
        
        stage.setScene(scene);
        stage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
}




package finalproject;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;
import java.util.Scanner;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;

import javafx.scene.control.ListView;
import javafx.scene.control.TextArea;
/**
 *
 * @author harikakunaparaju
 */
public class FXMLDocumentController implements Initializable {
    
    @FXML
    private ListView list;

    @FXML
    private Button B1;

    @FXML
    private Button B2;

    @FXML
    private Button B3;

    @FXML
    private Button B4;

    @FXML
    private Button R1;

    @FXML
    private Button R2;

    @FXML
    private Button R3;

    @FXML
    private Button R4;

    @FXML
    private Label L1;

    @FXML
    private Label L2;

    @FXML
    private Label L3;

    @FXML
    private Label L4;
    
    @FXML
    private TextArea pop;

    ArrayList<Book> List;

    @FXML
    private void ClickB1(ActionEvent event) {
        String book = L1.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                List1.borrowed();
                B1.setDisable(true);
                R1.setDisable(false);
                getAvailableBooks();
            }
        }
    }
    
    @FXML
    private void ClickB2(ActionEvent event) {
        String book = L2.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                List1.borrowed();
                B2.setDisable(true);
                R2.setDisable(false);
                getAvailableBooks();
            }
        }
    }
    
    @FXML
    private void ClickB3(ActionEvent event) {
        String book = L3.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                List1.borrowed();
                B3.setDisable(true);
                R3.setDisable(false);
                getAvailableBooks();
            }
        }
    }

           
    @FXML
    private void ClickB4(ActionEvent event) {
        String book = L4.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                List1.borrowed();
                B4.setDisable(true);
                R4.setDisable(false);
                getAvailableBooks();
            }
        }
    }

            
    @FXML
    private void ClickR1(ActionEvent event) throws IOException{
        String book=L1.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                getReceipt(L1.getText());
                List1.returned();
                B1.setDisable(false);
                R1.setDisable(true);
                getAvailableBooks();
            }
        }
    }

            
    @FXML
    private void ClickR2(ActionEvent event){
        String book=L2.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                getReceipt(L2.getText());
                List1.returned();
                B2.setDisable(false);
                R2.setDisable(true);
                getAvailableBooks();
            }
        }
    }

            
    @FXML
    private void ClickR3(ActionEvent event){
        String book=L3.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                getReceipt(L3.getText());
                List1.returned();
                B3.setDisable(false);
                R3.setDisable(true);
                getAvailableBooks();
            }
        }
    }

            
    @FXML
    private void ClickR4(ActionEvent event){
        String book=L4.getText();
        for (Book List1 : List) {
            if (List1.getTitle().equals(book)) {
                getReceipt(L4.getText());
                List1.returned();
                B4.setDisable(false);
                R4.setDisable(true);
                getAvailableBooks();
            }
        }
    }

            
    public void getReceipt(String name) {
        try {
            PrintWriter out = new PrintWriter("receipt.txt");
            pop.clear();
            out.println("*************Roesch Library*************");
            out.println("You have returned: " + name);
            out.println("*************Thank you*************");
            out.close();
            printReceipt();
        }
        catch(IOException e) {
            System.err.println(e);
        }
    } 
    
    public void printReceipt() throws FileNotFoundException {
        Scanner sc = new Scanner(new File("receipt.txt"));
        while (sc.hasNext())
            {
                String line = sc.nextLine();
                pop.appendText(line + "\n");
            }
    }

    public void AddBooks() {
        List = new ArrayList<>();
        List.add(new Book("Data Structures"));
        List.add(new Book("Java programming"));
        List.add(new Book("Database Illuminated systems"));
        List.add(new Book("Cloud Computing"));
    }

    public void getAvailableBooks() {
        ArrayList<String> a = new ArrayList<>();
        for (Book List1 : List) {
            if (List1.isBorrowed() == false) {
                a.add(List1.getTitle());
            }
        }
        ObservableList<String> observableList1 = FXCollections.observableList(a);
        list.setItems(observableList1);
    }

    
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        AddBooks();
        getAvailableBooks();
        R1.setDisable(true);
        R2.setDisable(true);
        R3.setDisable(true);
        R4.setDisable(true);
    }
    
}




<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.*?>
<?import java.util.*?>
<?import javafx.scene.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<AnchorPane id="AnchorPane" prefHeight="200" prefWidth="320" xmlns:fx="http://javafx.com/fxml/1" fx:controller="finalproject.FXMLDocumentController">
    <children>
        
      <ListView fx:id="list" layoutX="21.0" layoutY="121.0" prefHeight="242.0" prefWidth="258.0" />
      <AnchorPane layoutX="289.0" layoutY="9.0" prefHeight="412.0" prefWidth="655.0">
         <children>
            <Label fx:id="L1" layoutX="63.0" layoutY="21.0" text="Data Structures" />
            <Button fx:id="B1" layoutX="388.0" layoutY="16.0" mnemonicParsing="false" onAction="#ClickB1" text="Borrow" textFill="#58dd1a" />
            <Button fx:id="R1" layoutX="519.0" layoutY="16.0" mnemonicParsing="false" onAction="#ClickR1" text="Return" textFill="#da0b0b" />
            <Label fx:id="L2" layoutX="63.0" layoutY="55.0" text="Java programming" />
            <Label fx:id="L3" layoutX="63.0" layoutY="90.0" text="Database Illuminated systems" />
            <Label fx:id="L4" layoutX="63.0" layoutY="124.0" text="Cloud Computing" />
            <Button fx:id="B2" layoutX="388.0" layoutY="50.0" mnemonicParsing="false" onAction="#ClickB2" text="Borrow" textFill="#19dd29" />
            <Button fx:id="R2" layoutX="519.0" layoutY="50.0" mnemonicParsing="false" onAction="#ClickR2" text="Return" textFill="#d00909" />
            <Button fx:id="B3" layoutX="388.0" layoutY="85.0" mnemonicParsing="false" onAction="#ClickB3" text="Borrow" textFill="#29cd1b" />
            <Button fx:id="R3" layoutX="519.0" layoutY="85.0" mnemonicParsing="false" onAction="#ClickR3" text="Return" textFill="#bf0e0e" />
            <Button fx:id="B4" layoutX="388.0" layoutY="124.0" mnemonicParsing="false" onAction="#ClickB4" text="Borrow" textFill="#16cd25" />
            <Button fx:id="R4" layoutX="519.0" layoutY="128.0" mnemonicParsing="false" onAction="#ClickR4" text="Return" textFill="#d71010" />
            <TextArea fx:id="pop" layoutX="104.0" layoutY="256.0" prefHeight="127.0" prefWidth="476.0" />
         </children>
      </AnchorPane>
      <Label layoutX="76.0" layoutY="94.0" prefHeight="27.0" prefWidth="203.0" text="List of Books Available" />
    </children>
</AnchorPane>





package finalproject;

/**
 *
 * @author harikakunaparaju
 */
public class Book {String title;
    boolean borrowed;

    // Creates a new Book
    public Book(String bookTitle) {
        // Implement this method
        title = bookTitle; 
    }

    // Marks the book as rented
    public void borrowed() {
        // Implement this method
        borrowed = true;
    }

    // Marks the book as not rented
    public void returned() {
        // Implement this method
        borrowed = false;
    }

    // Returns true if the book is rented, false otherwise
    public boolean isBorrowed() {
        // Implement this method
        return borrowed == true;
    }

    // Returns the title of the book
    public String getTitle() {
        return title;
    }
}

